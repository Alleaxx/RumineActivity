@inherits StatComponent
@page "/statistics"

<div class="statistics">

    <section class="options">

        <h2>Настройка отчета</h2>

        <div class="content">

            <section>
                <Collection HeaderText="Тип отчета:" List="ReportTypes" Selected="ReportType" T="ReportType" OnSelectCallback="Set" />
            </section>

            <section class="dates">
                <section class="options-section">
                    <h4 class="options-list-header">Год / месяц:</h4>
                    <div>
                        <ul class="options-list">
                            @foreach (var year in Years)
                            {
                                <li class="@($"option-item {GetCssClassYear(year)}")" @onclick="(() => SetYear(year))">
                                    @if (year == 0)
                                    {
                                        <span>Все</span>
                                    }
                                    else
                                    {

                                        @year
                                    }
                                </li>
                            }
                        </ul>
                        @if (DateInterval.Year != 0)
                        {

                            <ul class="options-list">
                                @foreach (var month in Months)
                                {
                                    <li class="@($"option-item {GetCssClassMonth(month)}")" @onclick="(() => SetMonth(month))">
                                        @if (month == 0)
                                        {
                                            <span>Все</span>
                                        }
                                        else
                                        {

                                            @(new DateTime(2011, month, 1).ToString("MMM"))
                                        }
                                    </li>
                                }
                            </ul>
                        }
                        @*@if (DateInterval.Month != 0 && DateInterval.Year != 0 && false)
                        {

                            <ul class="options-list">
                                @foreach (var day in Days(DateInterval.Year, DateInterval.Month))
                                {
                                    <li class="@($"option-item {GetCssClassDay(day)}")" @onclick="(() => SetDay(day))">
                                        @if (day.from == 0 || day.to == 0)
                                        {
                                            <span>Все</span>
                                        }
                                        else
                                        {
                                            <span>@day.from - @day.to</span>
                                        }
                                    </li>
                                }
                            </ul>
                        }*@

                    </div>

                </section>


            </section>


            <section class="options-section">
                <div class="row-center">
                    <Collection HeaderText="Интервал записей:" List="Intervals" Selected="Options.DateInterval" T="DateInterval" OnSelectCallback="Set" />
                    <div>
                        @if (Options.DateInterval.Type == Dates.Own)
                        {
                            <label for="input-days">Промежуток (дней):</label>
                            <input id="input-days" class="entry-interval-input" type="number" min="1" max="10000" @bind:event="oninput" @bind="(Options.DateInterval.Days)" />
                        }
                    </div>
                </div>
            </section>

            <section class="options-section">
                <div class="row-center">
                    <Collection HeaderText="Источник:" List="TopicModes" Selected="Options.TopicMode" T="TopicsMode" OnSelectCallback="Set" />
                    <div>
                        @if (Options.TopicMode.Mode == TopicsModes.Topics)
                        {
                            <label for="topic-id">ID темы: </label>
                            <input type="number" id="topic-id" min="1" max="20000" list="topicsList" @bind:event="oninput" @bind="(Options.TopicMode.TopicId)" />
                            <DataTopics></DataTopics>
                        }
                    </div>
                </div>
            </section>

            <details class="source">
                <summary>
                    <h4 class="options-list-header">Подробно</h4>
                </summary>
                <div>
                    <label>
                        <span> Учет постов с даты: </span>
                        <input type="date" @bind-value="(Options.DateRange.From)" />
                    </label>
                    <label>
                        <span> По дату: </span>
                        <input type="date" @bind-value="(Options.DateRange.To)" />
                    </label>
                </div>
            </details>
        </div>

    </section>

    <div class="report">

        <h2>@Report.Name</h2>

        <div class="content">

            <div class="report-info">

                <style>
                    .stat {
                        display: flex;
                        justify-content: center;
                        margin: 1em;
                    }

                    .parameter {
                        display: flex;
                        align-items: center;
                        margin: 0 1em;
                    }

                        .parameter span:first-child {
                            margin: 0 8px;
                            font-size: 1.1em;
                            color: gray;
                        }

                        .parameter span:last-child {
                            font-size: 1.6em;
                        }
                </style>
                
                <section class="stat">
                    <div class="parameter">
                        <span>Записей:</span>
                        <span>@Report.Count</span>
                    </div>
                    <div class="parameter">
                        <span>Дней:</span>
                        <span>@Report.DateRange.Diff.TotalDays.ToString("#,0.0")</span>
                    </div>
                    <div class="parameter">
                        <span>Сообщений:</span>
                        <span>@Report.SumValue.ToString("#,0")</span>
                    </div>
                </section>
            </div>

            <div class="sheme">
                @if (!Report.IsEmpty)
                {
                    <Diagram Mode="@(new DataViewType(DataViewTypes.Values))" Report="@Report" />
                }
            </div>

        </div>

    </div>
    
    <div class="rules">
        <header>
            <h2>Измерение</h2>
        </header>
        <div class="content">
            <section class="options-section">
                <Collection HeaderText="Единицы измерения:" List="View.Units" Selected="View.MeasureUnit" T="MeasureUnit" OnSelectCallback="Set" />
            </section>
            <section class="options-section">
                <Collection HeaderText="Метод измерения:" List="View.Methods" Selected="View.MeasureMethod" T="MeasureMethod" OnSelectCallback="Set" />
            </section>
            <section>
                <Collection HeaderText="Значения постов:" List="View.OutValues" Selected="View.OutValue" T="OutputValue" OnSelectCallback="Set" />
            </section>

            <div class="option-accuracy">
                <label>
                    <span>Точность округления: </span><br />
                    <input type="number" @bind-value="View.RoundAccuracy" />
                    <span>знака</span>
                </label>
            </div>

            <h4>
                Правила:
            </h4>
            <style>
                .rules {
                }
                    .rules th {
                        font-weight: 500;
                        font-style: italic;
                    }
                    .rules input{
                        max-width: 100%;
                    }

                .rule-range {
                    max-width: 35px;
                }
                .rule-color {
                    max-width: 50px;
                }
            </style>
            <table class="rules">
                <tr>
                    <th>От</th>
                    <th>До</th>
                    <th>Цвет</th>
                </tr>
                @foreach (var rule in View.Rules.OfType<RuleRanged>().OrderBy(r => r.Min))
                {
                    <tr>
                        <td style="@($"border-left: 10px solid {rule.Color}")" class="rule-range"><input type="number" @bind-value="rule.Min"></td>
                        <td class="rule-range"><input type="number" @bind-value="rule.Max"></td>
                        <td class="rule-color">
                            <input type="text" min="1" max="10" @bind-value="rule.Color">
                        </td>
                    </tr>
                }
            </table>

        </div>
    </div>
</div>

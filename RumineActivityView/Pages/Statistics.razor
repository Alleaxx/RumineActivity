@inherits StatComponent
@page "/statistics"

<div class="statistics">

    <section class="options">

        <h2>Настройка отчета</h2>

        <div class="content">

            <section>
                <h4 class="options-list-header">Тип отчета: </h4>
                <section style="margin-left:20px">
                    <label for="report1">фактический</label>
                    <input @onchange="(e => { ReportType = Reports.Fact; CreateReport(); })" type="radio" name="report" id="report1" value="Fact" />

                    <label for="report2">периодический</label>
                    <input @onchange="(e => { ReportType = Reports.Periodical; CreateReport(); })" type="radio" name="report" id="report2" value="Periodical" checked />


                    @*<div class="creation">
                    <button class="btn-create-report" @onclick="CreateReport">
                        <span>-></span>
                    </button>
                </div>*@
                </section>

            </section>

            <section class="dates">
                @*<header>
                <h3>Даты</h3>
            </header>*@
                @*<div>
                <label>
                    <input type="date" @bind-value="(Options.DateRange.From)" />
                </label>
                <span> - </span>
                <label>
                    <input type="date" @bind-value="(Options.DateRange.To)" />
                </label>
            </div>*@
                <section class="options-section">
                    <h4 class="options-list-header">Год / месяц:</h4>
                    <div>
                        <ul class="options-list">
                            @foreach (var year in Years)
                            {
                                <li class="@($"option-item {GetCssClassYear(year)}")" @onclick="(() => SetYear(year))">
                                    @if (year == 0)
                                    {
                                        <span>Все</span>
                                    }
                                    else
                                    {

                                        @year
                                    }
                                </li>
                            }
                        </ul>
                        @if (DateInterval.Year != 0)
                        {

                            <ul class="options-list">
                                @foreach (var month in Months)
                                {
                                    <li class="@($"option-item {GetCssClassMonth(month)}")" @onclick="(() => SetMonth(month))">
                                        @if (month == 0)
                                        {
                                            <span>Все</span>
                                        }
                                        else
                                        {

                                            @(new DateTime(2011, month, 1).ToString("MMM"))
                                        }
                                    </li>
                                }
                            </ul>
                        }
                        @if (DateInterval.Month != 0 && DateInterval.Year != 0)
                        {

                            <ul class="options-list">
                                @foreach (var day in Days(DateInterval.Year, DateInterval.Month))
                                {
                                    <li class="@($"option-item {GetCssClassDay(day)}")" @onclick="(() => SetDay(day))">
                                        @if (day.from == 0 || day.to == 0)
                                        {
                                            <span>Все</span>
                                        }
                                        else
                                        {
                                            <span>@day.from - @day.to</span>
                                        }
                                    </li>
                                }
                            </ul>
                        }

                    </div>

                </section>


            </section>

            <section class="options-section">
                <h4 class="options-list-header">Интервал записей:</h4>
                <ul class="options-list">
                    @foreach (var interval in Intervals)
                    {
                        <li class="@($"option-item {GetCssClass(interval)}")" @onclick="(() =>Set(interval))">
                            <span>@interval.Name</span>
                            @if (interval.Name == "Свой")
                            {
                                <input class="entry-interval-input" type="number" min="0.001" max="10000" @bind-value="@(interval.Days)" />
                            }
                        </li>
                    }
                </ul>
            </section>

            <details class="source" open>
                <summary>Источник</summary>
                <section class="options-section">
                    <ul class="options-list">
                        @foreach (var interval in TopicModes)
                        {
                            <li class="@($"option-item {GetCssClass(interval)}")" @onclick="(() =>Set(interval))">
                                <span>@interval.Name</span>
                            </li>
                        }
                    </ul>
                </section>
                <section class="options-section" style="margin-left: 20px">
                    @if (Options.TopicMode.Mode == TopicsModes.Topics)
                    {
                        <h4 class="options-list-header">Список тем:</h4>
                        <input type="text" placeholder="100; 200; 300" @bind-value="@(Options.TopicMode.TopicsText)" />
                        <label>
                            <span>Добавить тему:</span>
                            <select @onchange="AddTopic">
                                @foreach (var topic in StatApp.App.Topics.Except<Topic>(TopicOptions))
                                {
                                    <option value="@topic.ID">[@topic.ID] @topic.Name</option>
                                }
                            </select>
                        </label>
                    }
                </section>
            </details>

            <div>
                <style>
                    .param {
                        color: black;
                    }

                    .date {
                        color: black;
                    }

                    .report-text {
                        color: gray;
                        font-size: 1.1em;
                        font-family: Consolas;
                    }
                </style>
                <p class="report-text">
                    <span class="param">@ReportType</span> отчет
                    с <span class="date">@Options.DateRange.From.ToString("dd.MM.yyyy").ToUpper()</span>
                    по <span class="date">@Options.DateRange.To.ToString("dd.MM.yyyy").ToUpper()</span>
                    периодичностью в <span class="param">@Options.DateInterval.Name.ToUpper()</span>
                    учитывающий <span class="param">@Options.TopicMode.Name.ToUpper()</span>
                </p>
            </div>

        </div>

    </section>

    <div class="report">

        <h2>@Report.Name</h2>

        <div class="content">

            <div class="report-info">

                <style>
                    .stat {
                        display: flex;
                        justify-content: center;
                        margin: 1em;
                    }

                    .parameter {
                        display: flex;
                        align-items: center;
                        margin: 0 1em;
                    }

                        .parameter span:first-child {
                            margin: 0 8px;
                            font-size: 1.1em;
                            color: gray;
                        }

                        .parameter span:last-child {
                            font-size: 1.6em;
                        }
                </style>
                <section class="stat">
                    <div class="parameter">
                        <span>Записей:</span>
                        <span>@Report.Count</span>
                    </div>
                    <div class="parameter">
                        <span>Дней:</span>
                        <span>@Report.DateRange.Diff.TotalDays.ToString("#,0.0")</span>
                    </div>
                    <div class="parameter">
                        <span>Сообщений:</span>
                        <span>@Report.SumValue.ToString("#,0")</span>
                    </div>
                </section>
            </div>

            <div class="sheme">
                @if (!Report.IsEmpty)
                {
                    <Diagram Mode="Список значений" Report="@Report" />
                }
            </div>

        </div>

    </div>
    
    <div class="rules">
        <header>
            <h2>Измерение</h2>
        </header>
        <div class="content">
            <section class="options-section">
                <h4 class="options-list-header">Единицы измерения:</h4>
                <ul class="options-list column" style="position:sticky">
                    @foreach (var unit in Units)
                    {
                        <li class="@($"option-item {GetCssClass(unit)}")" @onclick="(() => Set(unit))">
                            @unit.Name
                        </li>
                    }
                </ul>
            </section>
            <section class="options-section">
                <h4 class="options-list-header">Метод измерения:</h4>
                <ul class="options-list column">
                    @foreach (var method in Methods)
                    {
                        <li class="@($"option-item {GetCssClass(method)}")" @onclick="(() => Set(method))">
                            @method.Name
                        </li>
                    }
                </ul>
            </section>
            <div class="option-accuracy">
                <label>
                    <span>Точность округления: </span><br />
                    <input type="number" @bind-value="View.RoundAccuracy" />
                    <span>знака</span>
                </label>
            </div>

            <h4>
                Правила:
            </h4>
            <style>
                .rules {
                }

                    .rules th {
                        font-weight: 500;
                        font-style: italic;
                    }

                    .rules input {
                        max-width: 100%;
                    }

                    .rules .color-example {
                        width: 10px;
                        height: 10px;
                    }

                .rule-range {
                    max-width: 35px;
                }

                .rule-color {
                    max-width: 50px;
                }
            </style>
            <table class="rules">
                <tr>
                    <th>От</th>
                    <th>До</th>
                    <th>Цвет</th>
                </tr>
                @foreach (var rule in View.Rules.OfType<RuleRanged>().OrderBy(r => r.Min))
                {
                    <tr>
                        <td style="@($"border-left: 10px solid {rule.Color}")" class="rule-range"><input type="number" @bind-value="rule.Min"></td>
                        <td class="rule-range"><input type="number" @bind-value="rule.Max"></td>
                        <td class="rule-color">
                            <input type="text" @bind-value="rule.Color">
                        </td>
                    </tr>
                }
            </table>

        </div>
    </div>
</div>

@inherits ReportComponent

<section class="data-view">
    <ul class="tabber">
        @foreach(var mode in Modes)
        {
            <li class="@(Mode == mode ? "selected" : "")" @onclick="() => Change(new ChangeEventArgs() { Value = mode })"><span>@mode</span></li>
        }
    </ul>

    @*<section>
        <select class="options" @onchange="@Change">
            @foreach (var mode in Modes)
            {
                <option>@mode</option>
            }
        </select>
        <label>
            Ширина:
            <input type="number" @bind-value="Options.Width" />
        </label>
        <label>
            Высота:
            <input type="number" @bind-value="Options.Height" />
        </label>
    </section>*@

    <div class="content">
        <style>
            .text-name {
                font-size: 0.7em;
                max-width: 50px;
                text-wrap: normal;
                color: gray;
            }

            .text-value {
                font-size: 0.8em;
                max-width: 50px;
            }

            .g-entry:hover {
                color: red;
            }

            .gistogramm {
                width: 100%;
                border: 0px solid silver;
                border-radius: 2px;
                padding: 5px;
                margin: 10px 0;
            }

            .activity-line {
                fill: #ffd8a8;
                stroke: #e3830e;
            }
        </style>
        @if (Mode == "Гистограмма" && Gistogramm != null)
        {
            <svg class="gistogramm" height="@Options.Height" viewBox="@($"0 0 {Options.Width} {Options.Height}")">
                @foreach (var entry in Gistogramm.Rectangles)
                {
                    <g title="@entry.Entry.ToString()">
                        <rect x="@entry.Empty.X" y="@entry.Empty.Y" height="@entry.Empty.Height" width="@entry.Empty.Width" fill="transparent" stroke="transparent" />
                        <rect x="@entry.Filled.X" y="@entry.Filled.Y" height="@entry.Filled.Height" width="@entry.Filled.Width" fill="@View.CheckEntry(entry.Entry).Color" stroke="gray" />
                        @if (Report.Count < 13 || entry.Index % (Report.Count / 9) == 0)
                        {
                            <g>
                                <text class="text-name" x="@entry.Empty.X" y="@(entry.Filled.Y + entry.Filled.Height + 20)">@entry.Entry.Name</text>
                                <text class="text-value" x="@entry.Empty.X" y="@(entry.Filled.Y + entry.Filled.Height + 40)">@entry.Entry.Value.ToString("#,0")</text>
                            </g>
                        }
                    </g>
                }
            </svg>

        }
        else if (Mode == "График" && Graphic != null)
        {
            <svg class="gistogramm" height="@Options.Height" viewBox="@($"0 0 {Options.Width} {Options.Height}")">
                <line x1="0" x2="@Options.Width" y1="@(Options.Height - 50)" y2="@(Options.Height - 50)" stroke="gainsboro" stroke-width="1" />
                @foreach (var entry in Graphic.Lines)
                {
                    <g title="@entry.Entry.ToString()">
                        <line x1="@(entry.Line.X1)" x2="@(entry.Line.X1)" y1="@(entry.Line.Y1)" y2="@(Options.Height - 50)" stroke="gainsboro" stroke-width="1" />
                        <line x1="@entry.Line.X1" x2="@entry.Line.X2" y1="@entry.Line.Y1" y2="@entry.Line.Y2" stroke="orange" stroke-width="2" />
                        @if (Report.Count < 13 || entry.Index % (Report.Count / 9) == 0)
                        {
                            <g>
                                <text class="text-name" x="@entry.Line.X1" y="@(Options.Height - 40)">@entry.Entry.Name</text>
                                <text class="text-value" x="@entry.Line.X1" y="@(Options.Height - 20)">@entry.Entry.Value.ToString("#,0")</text>
                            </g>
                        }
                    </g>
                }
            </svg>
        }
        else if (Mode == "График с заливкой")
        {

            <svg class="gistogramm" height="@Options.Height" viewBox="@($"0 0 {Options.Width} {Options.Height}")">
                <g>
                    <path class="activity-line" d="@Graphic.Path" fill="#ffd8a8" stroke="#e3830e" />
                </g>
            </svg>
        }
        else if (Mode == "Таблица")
        {
            <ClassicTable Report="Report" />
        }
        else if (Mode == "Список значений")
        {
            <TableEntries Report="Report" />
        }
        else
        {
            <p>Что-то</p>
        }

    </div>


</section>


@code {
    public string Fill { get; set; } = "green";
    public string Stroke { get; set; } = "green";
    public string Path { get; set; } = "M 0 0 L 100 100";

    [Parameter]
    public string Mode { get; set; }
    public string[] Modes { get; set; } = new string[] { "Список значений", "Гистограмма", "График", "График с заливкой" , "Таблица" };


    public DiagramOptions Options { get; set; } = new DiagramOptions();

    public Gistogramm Gistogramm => new Gistogramm(Report, Options);
    public Graphic Graphic => new Graphic(Report, Options);


    private void Change(ChangeEventArgs e)
    {
        Mode = e.Value.ToString();
    }
}

@inherits ReportComponent
<section class="row">

    <div class="tables">
        <table class="records-table">
            <caption><h3>Рекорды</h3></caption>
            <tbody>
                <tr>
                    <td>Самый активный период</td>
                    <td>@Report.MostActive.Name</td>
                    <td class="numbers">@View.FormatEntry(Report.MostActive)</td>
                </tr>
                <tr>
                    <td>Самый мертвецкий период</td>
                    <td>@Report.MostInactive.Name</td>
                    <td class="numbers">@View.FormatEntry(Report.MostInactive)</td>
                </tr>
            </tbody>
        </table>
        <table class="values-table">
            <thead>
                <tr>
                    <th colspan="6">
                        @*<b>@View.MeasureUnit.Name</b>*@
                        <CollectionSelect HeaderText="Измерение в:" List="Selection.Units" Selected="View.MeasureUnit" T="MeasureUnit" OnSelectCallback="Set" />
                    </th>
                </tr>
                <tr>
                    <th class="text">№</th>
                    <th class="text" colspan="2">Период</th>
                    <th class="numbers">Дней</th>
                    <th class="numbers">всего за период</th>
                    <th class="numbers">
                        <CollectionSelect List="Selection.Methods" Selected="View.MeasureMethod" T="MeasureMethod" OnSelectCallback="Set" />
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var entry in Report.Entries)
                {
                    <tr>
                        <td style="@($"background-color: {View.Rules.GetFor(entry).Color}")">@entry.Index</td>
                        @if (entry.SeparateDates)
                        {
                            <td>@entry.Range.From.ToString(entry.DateFormat)</td>
                            <td>@entry.Range.To.ToString(entry.DateFormat)</td>
                        }
                        else
                        {
                            <td colspan="2">@entry.Name</td>
                        }
                        <td class="numbers">@entry.Range.Diff.Days.ToString("#,0")</td>
                        <td class="numbers posts">@View.FormatEntry(entry, MeasureMethods.Total)</td>
                        <td class="numbers posts">@View.FormatEntry(entry)</td>
                    </tr>

                }

            </tbody>
        </table>
    </div>

    <section class="rules">
        <div class="content">
            @*<section class="options-section">
            <Collection HeaderText="Единицы измерения:" List="Selection.Units" Selected="View.MeasureUnit" T="MeasureUnit" OnSelectCallback="Set" />
        </section>
        <section class="options-section">
            <Collection HeaderText="Метод измерения:" List="Selection.Methods" Selected="View.MeasureMethod" T="MeasureMethod" OnSelectCallback="Set" />
        </section>
        <section>
            <Collection HeaderText="Значения постов:" List="Selection.Outs" Selected="View.OutValue" T="OutputValue" OnSelectCallback="Set" />
        </section>*@

            <div class="option-accuracy">
                <label>
                    <span>Точность округления: </span><br />
                    <input type="number" min="0" max="10" @bind-value="View.RoundAccuracy" />
                    <span>знака</span>
                </label>
            </div>

            <section>
                <table class="rules-table">
                    <caption><h4 class="rules-header">Правила:</h4></caption>
                    <colgroup>
                        <col style="width:30%" />
                        <col style="width:30%" />
                        <col style="width:40%" />
                    </colgroup>
                    <tr>
                        <th>От</th>
                        <th>До</th>
                        <th>Цвет</th>
                    </tr>
                    @foreach (var rule in View.Rules.List)
                    {
                        if (rule is RuleRanged ruleRanged)
                        {
                            <tr>
                                <td class="rule-range">
                                    <input type="number" min="0" max="2000" @bind-value="ruleRanged.Min">
                                </td>
                                <td class="rule-range">
                                    <input type="number" min="0" max="2000" @bind-value="ruleRanged.Max">
                                </td>
                                <td class="rule-color" style="@($"border-right: 20px solid {rule.Color}")">
                                    <input type="text" @bind-value="rule.Color">
                                </td>
                            </tr>
                        }
                    }
                </table>
            </section>
        </div>
    </section>
</section>

@code {
    private void Set(MeasureUnit unit)
    {
        View.MeasureUnit = unit;
    }
    private void Set(MeasureMethod method)
    {
        View.MeasureMethod = method;
    }
}

@inherits ReportComponent
<section class="row">

    <div class="tables">
        <table class="records-table">
            <caption><h3>Рекорды</h3></caption>
            <tbody>
                <tr>
                    <td>Самый активный период</td>
                    <td>@Report.MostActive.Name</td>
                    <td>@FormatEntry(Report.MostActive)</td>
                </tr>
                <tr>
                    <td>Самый мертвецкий период</td>
                    <td>@Report.MostInactive.Name</td>
                    <td>@FormatEntry(Report.MostInactive)</td>
                </tr>
            </tbody>
        </table>

        <table class="values-table">
            <colgroup>
                <col style="width:10%" />
                <col style="width:18%" />
                <col style="width:18%" />
                <col style="width:54%" />
            </colgroup>
            <tr>
                <th>№</th>
                <th colspan="2">Период</th>
                <th>@View.MeasureUnit.Name @View.MeasureMethod.Name.ToLower()</th>
            </tr>
            @foreach (var entry in Report.Entries)
            {
                <tr>
                    <td>@entry.Index</td>
                    @if (entry.SeparateDates)
                    {
                        <td>@entry.Range.From.ToString(entry.DateFormat)</td>
                        <td>@entry.Range.To.ToString(entry.DateFormat)</td>
                    }
                    else
                    {
                        <td colspan="2">@entry.Name</td>
                    }
                    <td style="@($"background-color: {View.CheckEntry(entry).Color}")">@FormatEntry(entry)</td>
                </tr>

            }
        </table>
    </div>

    <section class="rules">
        <div class="content">
            <section class="options-section">
                <Collection HeaderText="Единицы измерения:" List="Selection.Units" Selected="View.MeasureUnit" T="MeasureUnit" OnSelectCallback="Set" />
            </section>
            <section class="options-section">
                <Collection HeaderText="Метод измерения:" List="Selection.Methods" Selected="View.MeasureMethod" T="MeasureMethod" OnSelectCallback="Set" />
            </section>
            @*<section>
                <Collection HeaderText="Значения постов:" List="Selection.Outs" Selected="View.OutValue" T="OutputValue" OnSelectCallback="Set" />
            </section>*@

            <div class="option-accuracy">
                <label>
                    <span>Точность округления: </span><br />
                    <input type="number" min="0" max="10" @bind-value="View.RoundAccuracy" />
                    <span>знака</span>
                </label>
            </div>

            <section>
                <table class="rules-table">
                    <caption><h4 class="rules-header">Правила:</h4></caption>
                    <colgroup>
                        <col style="width:30%"/>
                        <col style="width:30%"/>
                        <col style="width:40%" />
                    </colgroup>
                    <tr>
                        <th>От</th>
                        <th>До</th>
                        <th>Цвет</th>
                    </tr>
                    @foreach (var rule in View.Rules.OfType<RuleRanged>().OrderBy(r => r.Min))
                    {
                        <tr>
                            <td style="@($"border-left: 10px solid {rule.Color}")" class="rule-range">
                                <input type="number" min="0" max="2000" @bind-value="rule.Min">
                            </td>
                            <td class="rule-range">
                                <input type="number" min="0" max="2000" @bind-value="rule.Max">
                            </td>
                            <td class="rule-color">
                                <input type="text"  @bind-value="rule.Color">
                            </td>
                        </tr>
                    }
                </table>
            </section>
        </div>
    </section>
</section>

@code {
    private void Set(MeasureUnit unit)
    {
        View.MeasureUnit = unit;
    }
    private void Set(MeasureMethod method)
    {
        View.MeasureMethod = method;
    }
    private void Set(OutputValue val)
    {
        View.OutValue = val;
    }
}
